name: Deploy Cluster and Microservices

on:
  workflow_dispatch:

jobs:
  bootstrap-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -var="key_name=amithnv" -var="private_key_content=${{ secrets.SSH_PRIVATE_KEY }}"
        working-directory: ./terraform

      - name: Get EC2 Public IP
        id: get-ip
        run: |
          IP=$(terraform output -raw instance_public_ip)
          echo "EC2_IP=$IP" >> $GITHUB_ENV
        working-directory: ./terraform

      - name: Run Kubeadm Init and configure kubectl
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo hostnamectl set-hostname kmaster
            sudo kubeadm init
            mkdir -p $HOME/.kube
            sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
            sudo chown $(id -u):$(id -g) $HOME/.kube/config
            kubectl get nodes
            kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml
            kubectl describe node kmaster | grep Taint
            kubectl taint node kmaster node-role.kubernetes.io/control-plane:NoSchedule- || true
